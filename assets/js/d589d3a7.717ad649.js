"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[924],{8578:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>a});var s=i(4848),l=i(8453);const t={id:"getting-started",title:"Getting Started",slug:"/"},c="AI CLI",r={id:"getting-started",title:"Getting Started",description:"AI assistant in your terminal.",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/",permalink:"/ai-cli/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"getting-started",title:"Getting Started",slug:"/"},sidebar:"docs",next:{title:"Config File",permalink:"/ai-cli/config-file"}},o={},a=[{value:"Installation",id:"installation",level:2},{value:"Setup",id:"setup",level:2},{value:"API key",id:"api-key",level:3},{value:"Quick config",id:"quick-config",level:3},{value:"Usage",id:"usage",level:2},{value:"CLI options",id:"cli-options",level:2},{value:"CLI commands",id:"cli-commands",level:2},{value:"License",id:"license",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"ai-cli",children:"AI CLI"}),"\n",(0,s.jsx)(n.p,{children:"AI assistant in your terminal."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'$ ai "Tell me an interesting fact about the Roman Empire"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npm install -g @callstack/ai-cli\n"})}),"\n",(0,s.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,s.jsx)(n.h3,{id:"api-key",children:"API key"}),"\n",(0,s.jsx)(n.p,{children:"You will need a valid API key from one of supported AI inference providers: OpenAI or Perplexity. Using these APIs is paid but the costs should be very low, typically much less than $0.01 per interaction."}),"\n",(0,s.jsx)(n.h3,{id:"quick-config",children:"Quick config"}),"\n",(0,s.jsxs)(n.p,{children:["Run ",(0,s.jsx)(n.code,{children:"ai init"})," to create a basic ",(0,s.jsx)(n.code,{children:"~/.airc.json"})," config file with your OpenAI or Perplexity API keys."]}),"\n",(0,s.jsxs)(n.p,{children:["Read more about the ",(0,s.jsx)(n.a,{href:"config-file",children:"configuration file"})," format and available option."]}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(n.p,{children:["You can invoke ",(0,s.jsx)(n.code,{children:"ai"})," either in single-answer mode:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'$ ai "Tell me a joke"\nme:  Tell me a joke\nai:  Why don\'t scientists trust atoms? Because they make up everything!\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Or you can start a longer conversation using interactive mode (",(0,s.jsx)(n.code,{children:"-i"})," or ",(0,s.jsx)(n.code,{children:"--interactive"})," option):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'$ ai -i "Tell me a joke"\nme: Tell me a joke\nai: Why don\u2019t skeletons fight each other? They don\u2019t have the guts.\nme: tell me another one\nai: What do you call fake spaghetti? An impasta!\nme: _\n'})}),"\n",(0,s.jsx)(n.h2,{id:"cli-options",children:"CLI options"}),"\n",(0,s.jsxs)(n.p,{children:["CLI options are passed when invoking the ",(0,s.jsx)(n.code,{children:"ai"})," commend:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--help"}),": display available options"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--version"}),": display CLI version"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--provider [name]"})," (or ",(0,s.jsx)(n.code,{children:"-p [name]"}),"): select an inference provider to use: ",(0,s.jsx)(n.code,{children:"openai"})," or ",(0,s.jsx)(n.code,{children:"perplexity"})," (alias ",(0,s.jsx)(n.code,{children:"pplx"}),"). You should have relevant API key in your ",(0,s.jsx)(n.code,{children:"~/.airc.json"})," file."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--model [name]"})," (or ",(0,s.jsx)(n.code,{children:"-m [name]"}),"): select a model to use. This should be a model available for selected provider."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--creative"}),": respond in a creative way"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--precise"}),": respond in a more accurate way"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--verbose"})," (or ",(0,s.jsx)(n.code,{children:"-V"}),"): enable verbose"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"cli-commands",children:"CLI commands"}),"\n",(0,s.jsx)(n.p,{children:"CLI commands are available when using CLI in interactive mode."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"/help"}),": display available commands"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"/exit"}),": exit the CLI"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"/info"}),": display information about current session"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"/forget"}),": forget previous messages in the session"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"/verbose"}),": enable/disable verbose mode"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"license",children:"License"}),"\n",(0,s.jsx)(n.p,{children:"MIT"})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>r});var s=i(6540);const l={},t=s.createContext(l);function c(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:c(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);